{"version":3,"mappings":"8cAAe,MAAMA,CAAK,CACtB,YAAY,CAAC,OAAM,MAAI,EAAG,CAwB1BC,OAAMC,GA+BND,OAAME,GA/CNF,iBACAA,iBAEAA,iBAEAA,iBAEAA,iBACAA,iBACAA,SAAS,IAAI,KAhBTG,OAAKC,EAAQC,GACbF,OAAKG,EAAQC,EAChB,CAgBD,MAAM,YAAa,CACf,MAAMC,EAAOC,OAAKH,GAAL,WACb,MAAMI,OAAKR,KAAL,UAAaM,EACtB,CA2CD,MAAM,OAAOA,EAAM,CACf,MAAME,OAAKR,KAAL,UAAaM,GACnBC,OAAKL,GAAL,UAAWI,EACd,CAED,IAAI,MAAO,CAAC,OAAOC,OAAKE,EAAM,CAG9B,IAAI,SAAU,CAAC,OAAOF,OAAKG,EAAG,CAE9B,IAAI,GAAI,CAAC,OAAOH,OAAKG,EAAG,CAExB,IAAI,MAAO,CAAC,OAAOH,OAAKI,EAAG,CAE3B,IAAI,GAAI,CAAC,OAAOJ,OAAKI,EAAG,CAExB,IAAI,OAAQ,CAAC,OAAOJ,OAAKK,EAAG,CAE5B,IAAI,GAAI,CAAC,OAAOL,OAAKK,EAAG,CAExB,EAAEC,EAAKC,KAAWC,EAAM,CACpB,OAAO,KAAK,OAAOF,EAAKC,EAAQ,GAAGC,CAAI,CAC1C,CAED,OAAOF,EAAKC,KAAWC,EAAM,CACzB,OAAO,OAAO,OACVR,OAAKG,GAAGG,IAAQA,EAChBC,EAAQ,GAAGC,CACd,GAAI,EACR,CACL,CAvFIb,cACAE,cAEAM,cAEAC,cAEAC,cACAH,cACAO,cAOMjB,gBAAO,eAACO,EAAM,CAChB,GAAGC,OAAKS,GAAO,IAAIV,CAAI,EACnB,OAAOC,OAAKS,GAAO,IAAIV,CAAI,EAE/B,KAAM,CAAC,UAAS,OAAM,QAAO,QAAM,EAAI,MAAMW,2JAEvCC,EAAK,CAACC,EAAMC,IAAU,CACxB,MAAMC,EAAM,IAAI,IAChB,UAAUC,KAAOH,EACbE,EAAI,IAAIC,EAAK,IAAIC,EAAWJ,EAAKG,EAAI,CAAC,EAC1C,OAAO,IAAI,MAAMD,EAAK,CAClB,IAAK,CAACG,EAAQF,IACPE,EAAO,IAAIF,CAAG,EACNE,EAAO,IAAIF,CAAG,EACtBF,EAAgBA,EAAQI,EAAQF,CAAG,EAC/B,IAAIC,EAAWD,CAAG,CAE7C,CAAa,CACJ,EAEKH,EAAO,CACT,QAASD,EAAGO,CAAO,EACnB,KAAMP,EAAGQ,CAAI,EACb,MAAOR,EAAGS,EAAOH,GAAQA,EAAO,IAAI,QAAQ,CAAC,EAC7C,QACH,EAED,cAAKR,GAAO,IAAIV,EAAMa,CAAI,EACnBA,CACV,EAEKnB,gBAAO,eAACM,EAAM,CAChB,KAAM,CAAC,UAAS,OAAM,QAAO,QAAM,EAAI,MAAME,OAAKT,KAAL,UAAaO,GAC1DL,OAAKS,EAAKe,GACVxB,OAAKU,EAAKe,GACVzB,OAAKW,EAAKe,GACV1B,OAAKQ,EAAQH,GACb,QAAQ,aAAaA,EAAMsB,CAAM,EACjC,QAAQ,OAAOtB,CAAI,CACtB,EAkCL,MAAMiB,UAAmB,MAAO,CAC5B,OAAOT,KAAWC,EAAM,CACpB,OAAO,OAAO,OAAO,KAAMD,EAAQ,GAAGC,CAAI,CAC7C,CAED,EAAED,KAAWC,EAAM,CACf,OAAO,KAAK,OAAOD,EAAQ,GAAGC,CAAI,CACrC,CACL","names":["Lang","__privateAdd","_import","_switch","__privateSet","_save","save","_load","load","lang","__privateGet","__privateMethod","_lang","_g","_t","_e","str","values","args","_cache","__variableDynamicImportRuntimeHelper","ls","data","notfind","map","key","LangString","target","general","tips","error","moment"],"sources":["../../src/i18n/index.js"],"sourcesContent":["export default class Lang {\n    constructor({save, load}) {\n        this.#save = save;\n        this.#load = load;\n    }\n\n    /**\n     * @typedef {{[key: string]: LangString}} LSProxy\n     */\n    #save;\n    #load;\n    /** @type {LSProxy} */\n    #g;\n    /** @type {LSProxy} */\n    #t;\n    /** @type {LSProxy} */\n    #e;\n    #lang;\n    #cache = new Map();\n\n    async initialize() {\n        const lang = this.#load();\n        await this.#switch(lang);\n    }\n\n    async #import(lang) {\n        if(this.#cache.has(lang))\n            return this.#cache.get(lang);\n\n        const {general, tips, error, moment} = await import(`./langs/${lang}.js`);\n\n        const ls = (data, notfind)=>{\n            const map = new Map();\n            for(const key in data)\n                map.set(key, new LangString(data[key]));\n            return new Proxy(map, {\n                get: (target, key) => {\n                    if(target.has(key))\n                        return target.get(key);\n                    if(notfind) return notfind(target, key);\n                    return new LangString(key);\n                }\n            });\n        }\n\n        const data = {\n            general: ls(general),\n            tips: ls(tips),\n            error: ls(error, target=>target.get('unknow')),\n            moment,\n        }\n\n        this.#cache.set(lang, data);\n        return data;\n    }\n\n    async #switch(lang) {\n        const {general, tips, error, moment} = await this.#import(lang);\n        this.#g = general;\n        this.#t = tips;\n        this.#e = error;\n        this.#lang = lang;\n        $moment.updateLocale(lang, moment);\n        $moment.locale(lang);\n    }\n\n    async switch(lang) {\n        await this.#switch(lang);\n        this.#save(lang);\n    }\n\n    get lang() {return this.#lang;}\n\n    /** @readonly */\n    get general() {return this.#g;}\n    /** @readonly */\n    get g() {return this.#g;}\n    /** @readonly */\n    get tips() {return this.#t;}\n    /** @readonly */\n    get t() {return this.#t;}\n    /** @readonly */\n    get error() {return this.#e;}\n    /** @readonly */\n    get e() {return this.#e;}\n\n    f(str, values, ...args) {\n        return this.format(str, values, ...args);\n    }\n\n    format(str, values, ...args) {\n        return $utils.format(\n            this.#g[str] || str,\n            values, ...args\n        ) || '';\n    }\n}\n\nclass LangString extends String {\n    format(values, ...args) {\n        return $utils.format(this, values, ...args);\n    }\n\n    f(values, ...args) {\n        return this.format(values, ...args);\n    }\n}"],"file":"assets/index.43e3dbda.js"}