{"version":3,"file":"logic.a782f78c.js","sources":["../../src/functions/logic.js"],"sourcesContent":["export function exec(exprs, values) {\n    if(!Array.isArray(exprs)) return false;\n    const [expr, ...args] = exprs;\n    let fn;\n    switch(expr) {\n        case '$and': fn = $and; break;\n        case '$or': fn = $or; break;\n        case '$not': fn = $not; break;\n        case '$eq': fn = $eq; break;\n        case '$ne': fn = $ne; break;\n        case '$gt': fn = $gt; break;\n        case '$lt': fn = $lt; break;\n        case '$gte':\n        case '$ge': fn = $ge; break;\n        case '$lte':\n        case '$le': fn = $le; break;\n        case '$in': fn = $in; break;\n        case '$nin': fn = $nin; break;\n\n        // calculate\n        case '$sum':\n        case '$add': fn = $add; break;\n        case '$sub': fn = $sub; break;\n        case '$mul': fn = $mul; break;\n        case '$div': fn = $div; break;\n        case '$mod': fn = $mod; break;\n        case '$pow': fn = $pow; break;\n        case '$abs': fn = $abs; break;\n        case '$ceil': fn = $ceil; break;\n        case '$floor': fn = $floor; break;\n        case '$round': fn = $round; break;\n        case '$sqrt': fn = $sqrt; break;\n        case '$log': fn = $log; break;\n        case '$log10': fn = $log10; break;\n        case '$exp': fn = $exp; break;\n        case '$max': fn = $max; break;\n        case '$min': fn = $min; break;\n        case '$avg': fn = $avg; break;\n        case '$inc': fn = $inc; break;\n        case '$dec': fn = $dec; break;\n    }\n    if(!fn) return false;\n    return fn(args, values);\n}\n\nfunction value(values, v) {\n    if(typeof v === 'string' && v.startsWith('?')) {\n        const key = v.substring(1);\n        return values[key];\n    }\n    if(Array.isArray(v)) {\n        if(typeof v[0] === 'string' && v[0].startsWith('$')) {\n            return exec(v, values);\n        }\n    }\n    return v;\n}\n\nexport function $and(exprs, values) {\n    for(const exp of exprs)\n        if(!exec(exp, values))\n            return false;\n    return true;\n}\n\nexport function $or(exprs, values) {\n    for(const exp of exprs)\n        if(exec(exp, values))\n            return true;\n    return false;\n}\n\nexport function $not(args, values) {\n    return !exec(args, values);\n}\n\nexport function $eq(args, values) {\n    const [a, b] = args;\n    return value(values, a) === value(values, b);\n}\n\nexport function $ne(args, values) {\n    return !$eq(args, values);\n}\n\nexport function $gt(args, values) {\n    const [a, b] = args;\n    return value(values, a) > value(values, b);\n}\n\nexport function $lt(args, values) {\n    const [a, b] = args;\n    return value(values, a) < value(values, b);\n}\n\nexport function $ge(args, values) {\n    const [a, b] = args;\n    return value(values, a) >= value(values, b);\n}\n\nexport function $gte(args, values) {\n    return $ge(args, values);\n}\n\nexport function $le(args, values) {\n    const [a, b] = args;\n    return value(values, a) <= value(values, b);\n}\n\nexport function $lte(args, values) {\n    return $le(args, values);\n}\n\nexport function $in(args, values) {\n    const [a, b] = args;\n    const v = value(values, b);\n    if(Array.isArray(v))\n        return v.includes(value(values, a));\n    return false;\n}\n\nexport function $nin(args, values) {\n    return !$in(args, values);\n}\n\n\n// calculate\n\nexport function $add(args, values) {\n    let sum = 0;\n    for(const arg of args)\n        sum += value(values, arg);\n    return sum;\n}\n\nexport function $sub(args, values) {\n    const [a, ...subs] = args;\n    let sum = value(values, a);\n    for(const arg of subs)\n        sum -= value(values, arg);\n    return sum;\n}\n\nexport function $mul(args, values) {\n    let sum = 1;\n    for(const arg of args)\n        sum *= value(values, arg);\n    return sum;\n}\n\nexport function $div(args, values) {\n    const [a, ...subs] = args;\n    let sum = value(values, a);\n    for(const arg of subs)\n        sum /= value(values, arg);\n    return sum;\n}\n\nexport function $mod(args, values) {\n    const [a, b] = args;\n    return value(values, a) % value(values, b);\n}\n\nexport function $pow(args, values) {\n    const [a, b] = args;\n    return Math.pow(value(values, a), value(values, b));\n}\n\nexport function $abs(args, values) {\n    const [a] = args;\n    return Math.abs(value(values, a));\n}\n\nexport function $ceil(args, values) {\n    const [a] = args;\n    return Math.ceil(value(values, a));\n}\n\nexport function $floor(args, values) {\n    const [a] = args;\n    return Math.floor(value(values, a));\n}\n\nexport function $round(args, values) {\n    const [a] = args;\n    return Math.round(value(values, a));\n}\n\nexport function $sqrt(args, values) {\n    const [a] = args;\n    return Math.sqrt(value(values, a));\n}\n\nexport function $log(args, values) {\n    const [a] = args;\n    return Math.log(value(values, a));\n}\n\nexport function $log10(args, values) {\n    const [a] = args;\n    return Math.log10(value(values, a));\n}\n\nexport function $exp(args, values) {\n    const [a] = args;\n    return Math.exp(value(values, a));\n}\n\nexport function $max(args, values) {\n    let max = -Infinity;\n    for(const arg of args) {\n        const v = value(values, arg);\n        if(v > max)\n            max = v;\n    }\n    return max;\n}\n\nexport function $min(args, values) {\n    let min = Infinity;\n    for(const arg of args) {\n        const v = value(values, arg);\n        if(v < min)\n            min = v;\n    }\n    return min;\n}\n\nexport function $sum(args, values) {\n    return $add(args, values);\n}\n\nexport function $avg(args, values) {\n    return $add(args, values) / args.length;\n}\n\nexport function $inc(args, values) {\n    const [a] = args;\n    return value(values, a) + 1;\n}\n\nexport function $dec(args, values) {\n    const [a] = args;\n    return value(values, a) - 1;\n}"],"names":["exec","exprs","values","expr","args","fn","$and","$or","$not","$eq","$ne","$gt","$lt","$ge","$le","$in","$nin","$add","$sub","$mul","$div","$mod","$pow","$abs","$ceil","$floor","$round","$sqrt","$log","$log10","$exp","$max","$min","$avg","$inc","$dec","value","v","key","exp","a","b","$gte","$lte","sum","arg","subs","max","min","$sum"],"mappings":"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"}