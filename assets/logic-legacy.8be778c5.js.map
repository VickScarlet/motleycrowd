{"version":3,"file":"logic-legacy.8be778c5.js","sources":["../../src/functions/logic.js"],"sourcesContent":["export function exec(exprs, values) {\n    if(!Array.isArray(exprs)) return false;\n    const [expr, ...args] = exprs;\n    let fn;\n    switch(expr) {\n        case '$and': fn = $and; break;\n        case '$or': fn = $or; break;\n        case '$not': fn = $not; break;\n        case '$eq': fn = $eq; break;\n        case '$ne': fn = $ne; break;\n        case '$gt': fn = $gt; break;\n        case '$lt': fn = $lt; break;\n        case '$gte':\n        case '$ge': fn = $ge; break;\n        case '$lte':\n        case '$le': fn = $le; break;\n        case '$in': fn = $in; break;\n        case '$nin': fn = $nin; break;\n\n        // calculate\n        case '$sum':\n        case '$add': fn = $add; break;\n        case '$sub': fn = $sub; break;\n        case '$mul': fn = $mul; break;\n        case '$div': fn = $div; break;\n        case '$mod': fn = $mod; break;\n        case '$pow': fn = $pow; break;\n        case '$abs': fn = $abs; break;\n        case '$ceil': fn = $ceil; break;\n        case '$floor': fn = $floor; break;\n        case '$round': fn = $round; break;\n        case '$sqrt': fn = $sqrt; break;\n        case '$log': fn = $log; break;\n        case '$log10': fn = $log10; break;\n        case '$exp': fn = $exp; break;\n        case '$max': fn = $max; break;\n        case '$min': fn = $min; break;\n        case '$avg': fn = $avg; break;\n        case '$inc': fn = $inc; break;\n        case '$dec': fn = $dec; break;\n    }\n    if(!fn) return false;\n    return fn(args, values);\n}\n\nfunction value(values, v) {\n    if(typeof v === 'string' && v.startsWith('?')) {\n        const key = v.substring(1);\n        return values[key];\n    }\n    if(Array.isArray(v)) {\n        if(typeof v[0] === 'string' && v[0].startsWith('$')) {\n            return exec(v, values);\n        }\n    }\n    return v;\n}\n\nexport function $and(exprs, values) {\n    for(const exp of exprs)\n        if(!exec(exp, values))\n            return false;\n    return true;\n}\n\nexport function $or(exprs, values) {\n    for(const exp of exprs)\n        if(exec(exp, values))\n            return true;\n    return false;\n}\n\nexport function $not(args, values) {\n    return !exec(args, values);\n}\n\nexport function $eq(args, values) {\n    const [a, b] = args;\n    return value(values, a) === value(values, b);\n}\n\nexport function $ne(args, values) {\n    return !$eq(args, values);\n}\n\nexport function $gt(args, values) {\n    const [a, b] = args;\n    return value(values, a) > value(values, b);\n}\n\nexport function $lt(args, values) {\n    const [a, b] = args;\n    return value(values, a) < value(values, b);\n}\n\nexport function $ge(args, values) {\n    const [a, b] = args;\n    return value(values, a) >= value(values, b);\n}\n\nexport function $gte(args, values) {\n    return $ge(args, values);\n}\n\nexport function $le(args, values) {\n    const [a, b] = args;\n    return value(values, a) <= value(values, b);\n}\n\nexport function $lte(args, values) {\n    return $le(args, values);\n}\n\nexport function $in(args, values) {\n    const [a, b] = args;\n    const v = value(values, b);\n    if(Array.isArray(v))\n        return v.includes(value(values, a));\n    return false;\n}\n\nexport function $nin(args, values) {\n    return !$in(args, values);\n}\n\n\n// calculate\n\nexport function $add(args, values) {\n    let sum = 0;\n    for(const arg of args)\n        sum += value(values, arg);\n    return sum;\n}\n\nexport function $sub(args, values) {\n    const [a, ...subs] = args;\n    let sum = value(values, a);\n    for(const arg of subs)\n        sum -= value(values, arg);\n    return sum;\n}\n\nexport function $mul(args, values) {\n    let sum = 1;\n    for(const arg of args)\n        sum *= value(values, arg);\n    return sum;\n}\n\nexport function $div(args, values) {\n    const [a, ...subs] = args;\n    let sum = value(values, a);\n    for(const arg of subs)\n        sum /= value(values, arg);\n    return sum;\n}\n\nexport function $mod(args, values) {\n    const [a, b] = args;\n    return value(values, a) % value(values, b);\n}\n\nexport function $pow(args, values) {\n    const [a, b] = args;\n    return Math.pow(value(values, a), value(values, b));\n}\n\nexport function $abs(args, values) {\n    const [a] = args;\n    return Math.abs(value(values, a));\n}\n\nexport function $ceil(args, values) {\n    const [a] = args;\n    return Math.ceil(value(values, a));\n}\n\nexport function $floor(args, values) {\n    const [a] = args;\n    return Math.floor(value(values, a));\n}\n\nexport function $round(args, values) {\n    const [a] = args;\n    return Math.round(value(values, a));\n}\n\nexport function $sqrt(args, values) {\n    const [a] = args;\n    return Math.sqrt(value(values, a));\n}\n\nexport function $log(args, values) {\n    const [a] = args;\n    return Math.log(value(values, a));\n}\n\nexport function $log10(args, values) {\n    const [a] = args;\n    return Math.log10(value(values, a));\n}\n\nexport function $exp(args, values) {\n    const [a] = args;\n    return Math.exp(value(values, a));\n}\n\nexport function $max(args, values) {\n    let max = -Infinity;\n    for(const arg of args) {\n        const v = value(values, arg);\n        if(v > max)\n            max = v;\n    }\n    return max;\n}\n\nexport function $min(args, values) {\n    let min = Infinity;\n    for(const arg of args) {\n        const v = value(values, arg);\n        if(v < min)\n            min = v;\n    }\n    return min;\n}\n\nexport function $sum(args, values) {\n    return $add(args, values);\n}\n\nexport function $avg(args, values) {\n    return $add(args, values) / args.length;\n}\n\nexport function $inc(args, values) {\n    const [a] = args;\n    return value(values, a) + 1;\n}\n\nexport function $dec(args, values) {\n    const [a] = args;\n    return value(values, a) - 1;\n}"],"names":["exec","exprs","values","Array","isArray","fn","_exprs","_toArray","expr","args","slice","$and","$or","$not","$eq","$ne","$gt","$lt","$ge","$le","$in","$nin","$add","$sub","$mul","$div","$mod","$pow","$abs","$ceil","$floor","$round","$sqrt","$log","$log10","$exp","$max","$min","$avg","$inc","$dec","value","v","startsWith","substring","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","_iterator2","_step2","_args","_slicedToArray","a","b","_args2","_args3","_args4","_args5","_args6","includes","_step3","sum","_iterator3","_step4","_args7","subs","_iterator4","_step5","_iterator5","_step6","_args8","_iterator6","_args9","_args10","Math","pow","abs","ceil","floor","round","sqrt","log","log10","exp","_step7","max","Infinity","_iterator7","_step8","min","_iterator8","length"],"mappings":"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"}