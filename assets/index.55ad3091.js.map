{"version":3,"mappings":"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","names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","__variableDynamicImportRuntimeHelper","glob","path","v","_","reject","initGlobal","__vitePreload","configure","mods","lists","mod","p","modules","m","initDebug","initLogger","initLang","Lang","lang","initCore","Core","core","initApp","App","app","dURL","match","query","data","key","value","page","start","cfgList","msg","source","line","col","error","debug","i18n","banned","e"],"sources":["../../vite/modulepreload-polyfill","../../../../../../../@vite/dynamic-import-helper","../../src/system.js","../../src/index.js"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","export default (glob, path) => {\n    const v = glob[path];\n    if (v) {\n        return typeof v === 'function' ? v() : Promise.resolve(v);\n    }\n    return new Promise((_, reject) => {\n        (typeof queueMicrotask === 'function' ? queueMicrotask : setTimeout)(reject.bind(null, new Error('Unknown variable dynamic import: ' + path)));\n    });\n}","async function initGlobal() {\n    window.$ = {};\n    window.$.utils =\n    window.$u =\n    window.$utils = await import('./functions/index.js');\n    window.$.logic =\n    window.$logic = await import('./functions/logic.js');\n    window.$.normalize =\n    window.$norml =\n    window.$normalize = await import('./functions/normalize.js');\n    window.$.hash =\n    window.$hash = await import('./functions/hash.js');\n\n    window.$.event =\n    window.$event = await import('./event/index.js');\n    window.$on = $event.on;\n    window.$off = $event.off;\n    window.$emit = $event.emit;\n\n    window.$.moment =\n    window.$moment = (await import('moment')).default;\n}\n\nasync function configure(mods, lists) {\n    const configure = {};\n    for (const mod of mods) {\n        configure[mod] = {};\n    }\n    await Promise\n        .all(lists.map(p=>import(`./config/${p}.js`).catch(_=>null)))\n        .then(modules=>modules.forEach(m => {\n            if(!m) return;\n            for (const mod of mods) {\n                if(!m[mod]) continue;\n                Object.assign(configure[mod], m[mod]());\n            }\n        }));\n    return configure;\n}\n\nasync function initDebug(configure) {\n    if(!configure) return;\n    window.$.debug =\n    window.$debug = configure.on;\n    if($debug && configure.patch) {\n        await configure.patch();\n    }\n}\n\nasync function initLogger(configure) {\n}\n\nasync function initLang(configure) {\n    const {default: Lang} = await import('./i18n/index.js');\n    const lang = new Lang(configure);\n    window.$.lang =\n    window.$lang = lang;\n    await lang.initialize();\n}\n\nasync function initCore(configure) {\n    const {default: Core} = await import('./core/index.js');\n    const core = new Core(configure);\n    window.$.core =\n    window.$$ =\n    window.$core = core;\n    await core.initialize();\n}\n\nasync function initApp(configure) {\n    const {default: App} = await import('./app/index.js');\n    const app = new App(configure);\n    window.$.app =\n    window.$app = app;\n    await app.initialize();\n}\n\nfunction dURL() {\n    const match = /\\/#\\/(([^\\/\\?]+)\\/?)(\\?+(.*))?/\n        .exec(window.location.href);\n    if(!match) return;\n    let [,,page,,data,,query] = match;\n    if(!data) data = {};\n    else data = JSON.parse(decodeURIComponent(data));\n    if(query)\n        query.split('&').forEach(v=>{\n            const [key, value] = v.split('=');\n            data[key] = JSON.parse(decodeURIComponent(value))\n        });\n    $app.switch(page, data);\n}\n\nexport async function start(cfgList) {\n    window.onerror = (msg,source,line,col,error) =>\n        alert(`${msg}at: ${source||\"<anonymous>\"}:${line}:${col}\\n${error}`);\n\n    await initGlobal();\n\n    $on('network.banned', ()=>window.location.reload());\n\n    const { debug, logger, i18n, core, app } = await configure(\n        ['debug', 'logger', 'i18n', 'core', 'app'], cfgList\n    );\n\n    await initDebug(debug);\n    await initLogger(logger);\n    await initLang(i18n);\n    await initCore(core);\n    await initApp(app);\n\n    $app.loading(true);\n    try {\n        const banned = $core.database.kv.get('banned');\n        if(banned && banned > Date.now()) {\n            $app.tips($lang.t.banned);\n            return;\n        }\n        await $core.start();\n        await $app.start();\n        $app.loading(false);\n        $emit('system.start');\n    } catch(e) {\n        console.error(e);\n        $app.tips($lang.t.init_err);\n    }\n    window.onpopstate = dURL;\n    dURL();\n}\n\nexport default start;","import { start } from './system.js';\n\nstart([\n    'configure.default',\n    'configure.search',\n    'configure',\n]);"],"file":"assets/index.55ad3091.js"}