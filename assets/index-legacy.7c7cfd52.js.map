{"version":3,"file":"index-legacy.7c7cfd52.js","sources":["../../src/functions/index.js"],"sourcesContent":["export function clone(value) {\n    if(value === null) return null;\n    if(typeof value === 'object') {\n        if(Array.isArray(value)) return value.map(v=>clone(v));\n        if(value instanceof Map) {\n            const map = new Map();\n            value.forEach((v,k)=>map.set(k,clone(v)));\n            return map;\n        }\n        if(value instanceof Set) {\n            const set = new Set();\n            value.forEach(v=>set.add(clone(v)));\n            return set;\n        }\n        if(value instanceof Date) {\n            return new Date(value);\n        }\n        const obj = {};\n        for(const key in value) obj[key] = clone(value[key]);\n        return obj;\n    }\n    return value;\n}\n\nexport function isFunction(value) {\n    return typeof value==\"function\" && !!value.constructor;\n}\n\nexport function listRandom(list) {\n    return list[Math.floor(Math.random() * list.length)];\n}\n\nexport async function delay(min, max) {\n    const time = max? Math.random() * (max - min) + min : min;\n    if(!time) return;\n    await new Promise(resolve => setTimeout(resolve, time));\n}\n\nexport function batch(bpart, time, apart) {\n    let flag = false;\n    const args = {};\n    const fn = async ()=>{\n        if(flag) return;\n        flag = true;\n        const ret = await apart?.(args);\n        await delay(time);\n        if(!flag) return;\n        bpart(ret, args);\n        flag = false;\n    }\n    Object.defineProperties(fn, {\n        flag: { get: ()=>flag, set: f=>{flag=f}},\n    });\n    return fn;\n}\n\nexport function getType(value) {\n    const name = value?.constructor?.name;\n    if(name) return name;\n    const type = Object.prototype.toString.call(value);\n    return type.substring(8, type.length - 1);\n}\n\nexport function equals(a, b) {\n    if(a===b) return true;\n    const ta = getType(a);\n    const tb = getType(b);\n    if(ta!=tb) return false;\n    switch(ta) {\n        case 'Number':\n            if(isNaN(a) && isNaN(b)) return true;\n            return a===b;\n        case 'Array':\n            if(a.length!=b.length) return false;\n            for (let i=a.length; i--;)\n                if(!equals(a[i], b[i]))\n                    return false;\n            return true;\n        case 'Object':\n            for(const key in a)\n                if(!equals(a[key], b[key]))\n                    return false;\n            return true;\n        case 'Set':\n            if(a.size!=b.size) return false;\n            const bm = new Map(b.entries());\n            for(const v of a) {\n                if(b.has(v)) return true;\n                let found = false;\n                for(const [key, value] of bm)\n                    if(equals(v, value)) {\n                        bm.delete(key);\n                        found = true;\n                        break;\n                    }\n                if(!found) return false;\n            }\n            return true;\n        case 'Map':\n            if(a.size!=b.size) return false;\n            for(const [key, value] of a)\n                if(!equals(value, b.get(key)))\n                    return false;\n            return true;\n        case 'Date':\n            return a.getTime() === b.getTime();\n        default:\n            if(a.equals) return a.equals(b);\n            return false;\n    }\n}\n\nexport function objDiff(a, b) {\n    if(a===b) return null;\n    const ta = getType(a);\n    const tb = getType(b);\n    if(ta!=tb) return clone(b);\n    if(ta!='Object') {\n        if(equals(a,b)) return null;\n        return clone(b);\n    }\n    let r = false;\n    const diff = {};\n    const keys = new Set([\n        ...Object.keys(a),\n        ...Object.keys(b),\n    ]);\n    for (const key of keys) {\n        const sa = a[key];\n        const sb = b[key];\n        if(sb==null) {\n            r = true;\n            diff[key] = null;\n            continue;\n        }\n        const sd = objDiff(sa, sb);\n        if(sd===null) continue;\n        r = true;\n        diff[key] = sd;\n    }\n    return r? diff: null;\n}\n\nexport function objUpdate(original, update) {\n    const to = getType(original);\n    const tu = getType(update);\n    if(to!=tu) return update;\n    if(to !== 'Object') return update;\n    for(const key in update) {\n        const u = update[key];\n        if(u===null) {\n            delete original[key];\n            continue;\n        }\n        original[key] = objUpdate(\n            original[key], u\n        );\n    }\n    return original;\n}\n\n/**\n * @param {any} obj\n * @param {number} [depth=Infinity]\n * @param {boolean} [flatArray=false]\n * @return {any}\n */\nexport function flat(obj, depth=Infinity, flatArray=false) {\n    const flat = (o, d)=> {\n        if( d <= 0\n            || typeof o !== 'object'\n            || Array.isArray(o) && !flatArray\n        ) return [o, false];\n\n        const r = {};\n        for (const k in o) {\n            const [v, n] = flat(o[k], d-1);\n            if(!n) {\n                r[k] = v;\n                continue;\n            }\n            for(const s in v)\n                r[`${k}.${s}`] = v[s];\n        }\n        return [r, true];\n    }\n    return flat(obj, depth+1)[0];\n}\n\nexport function format(str, values, ...args) {\n    if(!str || values==null && !args.length)\n        return str;\n    args.unshift(values);\n    if( typeof values != 'object'\n        || values instanceof String\n    ) values=args;\n    let idx = 0;\n    return str.replace(/\\{([0-9A-Za-z]*)\\}/g, (match, p1)=> {\n        if(p1 == '') p1 = idx;\n        idx ++;\n        const rep = values[p1];\n        if(rep != null) return rep;\n        const arg = args[p1];\n        if(arg != null) return arg;\n        return match;\n    });\n}"],"names":["clone","value","_typeof","Array","isArray","map","v","Map","forEach","k","set","Set","add","Date","obj","key","delay","_x","_x2","_delay","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","min","max","time","wrap","_context2","prev","next","Math","random","abrupt","Promise","resolve","setTimeout","stop","getType","_value$constructor","name","constructor","type","Object","prototype","toString","call","substring","length","equals","a","b","ta","isNaN","i","size","_step","bm","entries","_iterator","_createForOfIteratorHelper","s","n","done","has","_step2","found","_iterator2","_step2$value","_slicedToArray","delete","err","e","f","_step3","_iterator3","_step3$value","get","getTime","bpart","apart","flag","args","fn","_ref","_callee","ret","_context","sent","defineProperties","depth","undefined","Infinity","flatArray","flat","o","d","r","_flat2","concat","str","values","_len","_key3","unshift","String","idx","replace","match","p1","rep","arg","list","floor","objDiff","tb","_step4","diff","_iterator4","_toConsumableArray","keys","sa","sb","sd","objUpdate","original","update","to","tu","u"],"mappings":"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"}